// call-api.js
// Minimal, Node + browser compatible helper to call HTTP APIs.

(async () => {
    // Polyfill fetch in older Node.js (optional: install node-fetch)
    if (typeof fetch === 'undefined') {
        try {
            global.fetch = (...args) => require('node-fetch')(...args);
        } catch (e) {
            console.error('Fetch not available. Install "node-fetch" or use Node 18+.');
            process.exit(1);
        }
    }

    async function callApi(url, { method = 'GET', headers = {}, body = null, timeout = 0 } = {}) {
        const opts = { method, headers: { ...headers } };

        if (body != null) {
            if (typeof body === 'object' && !(body instanceof Uint8Array)) {
                opts.headers['Content-Type'] = opts.headers['Content-Type'] || 'application/json';
                opts.body = JSON.stringify(body);
            } else {
                opts.body = body;
            }
        }

        if (timeout > 0 && typeof AbortController !== 'undefined') {
            const controller = new AbortController();
            opts.signal = controller.signal;
            setTimeout(() => controller.abort(), timeout);
        }

        const res = await fetch(url, opts);
        const text = await res.text();
        const contentType = res.headers.get?.('content-type') || '';
        const data = contentType.includes('application/json') ? JSON.parse(text || '{}') : text;

        if (!res.ok) {
            const err = new Error(`HTTP ${res.status} ${res.statusText}`);
            err.status = res.status;
            err.body = data;
            throw err;
        }

        return data;
    }

    // Export for CommonJS require()
    if (typeof module !== 'undefined') module.exports = { callApi };

    // Example when run directly:
    if (typeof process !== 'undefined' && require.main === module) {
        const url = process.argv[2] || 'https://jsonplaceholder.typicode.com/todos/1';
        try {
            const result = await callApi(url);
            console.log(result);
        } catch (err) {
            console.error('Request failed:', err);
        }
    }
})();